import { fileURLToPath, URL } from 'node:url'

import { defineConfig, loadEnv } from 'vite'
<%_ for (const { importer } of plugins) { _%>
<%- importer %>
<%_ } _%>

// https://vite.dev/config/
export default defineConfig(({ command, mode }) => {
  const CWD = process.cwd()
  const { VITE_USE_MOCK, VITE_APP_TITLE } = loadEnv(mode, CWD, '')
  const isEnabledMock = command === 'serve' && mode !== 'production' && VITE_USE_MOCK === '1'
  const isBuild = command === 'build'

  return {
    plugins: [
    <%_ for (const { initializer } of plugins) { _%>
      <%- initializer _%>,
    <%_ } _%>
    // 开发环境完整引入element-plus
    {
      name: 'dev-auto-import-element-plus',
      transform(code, id) {
        if (command === 'serve' && /src\/main.ts$/.test(id)) {
          return {
            code: `${code};import ElementPlus from 'element-plus';import 'element-plus/dist/index.css';app.use(ElementPlus);`,
            map: null
          }
        }
      }
    },
    ],
    resolve: {
      alias: {
        '@': fileURLToPath(new URL('./src', import.meta.url))
      },
      extensions: ['.js', '.json', '.ts', '.tsx', '.vue', '.mjs']
    },
    base: VITE_BASE_URL, // 设置打包路径
    build: {
      chunkSizeWarningLimit: 500,
      minify: 'terser',
      cssCodeSplit: true, // 如果设置为false，整个项目中的所有 CSS 将被提取到一个 CSS 文件中
      reportCompressedSize: false, // 关闭文件计算
      sourcemap: false, // 关闭生成map文件 可以达到缩小打包体积
      terserOptions: {
        compress: {
          drop_console: true, //打包时删除console
          drop_debugger: true, //打包时删除 debugger
          pure_funcs: ['console.log']
        },
        output: {
          comments: true // 去掉注释内容
        }
      },

      rollupOptions: {
        output: {
          chunkFileNames: 'static/js/[name]-[hash].js', // 引入文件名的名称
          entryFileNames: 'static/js/[name]-[hash].js', // 包的入口文件名称
          assetFileNames: 'static/[ext]/[name]-[hash].[ext]', // 资源文件像 字体，图片等
          manualChunks: {
            vue: ['vue', 'vue-router', 'pinia'],
            elementplus: ['element-plus'],
            elementicon: ['@element-plus/icons-vue'],
            echarts: ['echarts'],
            xlsx: ['xlsx'],
            utils: ['axios', 'lodash-es']
          }
        }
      }
    },
    css: {
      modules: {
        localsConvention: 'camelCase', // 默认只支持驼峰，修改为同时支持横线和驼峰
        generateScopedName: '[name]_[local]_[hash:base64:5]'
      },
      postcss: {
        plugins: [
          {
            postcssPlugin: 'internal:charset-removal',
            AtRule: {
              charset: atRule => {
                if (atRule.name === 'charset') {
                  atRule.remove()
                }
              }
            }
          }
        ]
      },
      preprocessorOptions: {
        scss: {
          api: 'modern-compiler', 
          importers: [
            // ...
          ],
        },
      }
    },
    server: {
      host: 'yongtao-custom.com',
      port: 5173,
      open: true,
      cors: true, // 允许跨域
      proxy: {
        '/api': {
          target: VITE_PROXY_URL,
          changeOrigin: true,
          rewrite: path => path.replace(/^\/api/, '')
        }
      }
    }
  }
})
